@{
    var user = await UserManager.GetUserAsync(User);
    var appName = Configuration.GetValue<string>("Application");
}
<nav class="navbar navbar-dark align-items-start sidebar sidebar-dark accordion bg-gradient-primary p-0">
    <div class="container-fluid d-flex flex-column p-0">
        <a class="navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0" href="#">
            <div class="sidebar-brand-icon rotate-n-15"><i class="fas fa-th-large"></i></div>
            <div class="sidebar-brand-text mx-3" style="max-width:100px;"><span>FAS</span></div>
        </a>
        <hr class="sidebar-divider my-0">
        <ul class="navbar-nav text-light" id="accordionSidebar">
            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Admin.View)).Succeeded)
            {
                <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "Admin")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-cogs nav-icon"></i>
                        <span>
                            @Localizer["Admin"]
                            <i class="right fas level-one-nav-icon fa-angle-left"></i>
                        </span>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Entities.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Entities" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Entities")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Entities"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Group.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Group" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Group")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Group"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Roles.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Roles" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Roles")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Roles"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Users" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Users")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Users"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Apis.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Apis" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "APIs")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["APIs"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Applications.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Applications" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Applications")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Applications"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.AuditTrail.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/AuditTrail" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "AuditTrail")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Audit Trail"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.ApproverSetup.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/ApproverSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Approval")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Approval"]
                                    </span>
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.MasterFile.View)).Succeeded)
            {
                <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "FAS")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-list-alt nav-icon"></i>
                        <span>
                            @Localizer["Masterfile Setup"]
                            <i class="right fas level-one-nav-icon fa-angle-left"></i>
                        </span>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.DatabaseConnectionSetup.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/DatabaseConnectionSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "DatabaseConnectionSetup")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Database Setup"]
                                    </span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Company.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/Company" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Company")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Company"]
                                    </span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Project.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/Project" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Project")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Project"]
                                    </span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Tenant.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/Tenant" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Tenant")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Tenant"]
                                    </span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Creditor.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/Creditor" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Creditor")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Creditor"]
                                    </span>
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            }
            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.AccountsPayable.View)).Succeeded)
            {
                <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "AP")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-list-alt nav-icon"></i>
                        <span>
                            @Localizer["Accounts Payable"]
                            <i class="right fas level-one-nav-icon fa-angle-left"></i>
                        </span>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.EnrolledPayee.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/EnrolledPayee/Enrollment" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "EnrolledPayee")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Payee Enrollment"]
                                    </span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.PaymentTransaction.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/FAS/PaymentTransaction/NewTransactions" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "PaymentTransaction")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Payment Transaction"]
                                    </span>
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            }
        </ul>
        <div class="text-center d-none d-md-inline"><button class="btn rounded-circle border-0" id="sidebarToggle" type="button"></button></div>
    </div>
</nav>
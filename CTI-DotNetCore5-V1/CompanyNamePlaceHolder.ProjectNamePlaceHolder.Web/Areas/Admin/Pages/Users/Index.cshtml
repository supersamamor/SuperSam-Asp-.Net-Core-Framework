@page
@model IndexModel

@section Styles {
<partial name="_DataTableStyles" />
}

@{
    ViewData["Title"] = Localizer["Users List"];
    ViewData["ActiveMainPage"] = "Users";
}
<div class="card">
    <div class="card-body">
        <table id="users" class="table table-hover table-bordered table-striped">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.UserModel!.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserModel!.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UserModel!.IsActive)
                    </th>
                </tr>
            </thead>
        </table>
    </div>
</div>

<a id="back-to-top" href="#" class="btn btn-primary back-to-top" role="button" aria-label="Scroll to top">
    <i class="fas fa-chevron-up"></i>
</a>

<partial name="_FormModalPartial" />

@section Scripts {
<partial name="_ValidationScriptsPartial" />
<partial name="_DataTableScripts" />
<script asp-add-nonce>
    $(document).ready(function () {
        var table = $('#users').DataTable({
            serverSide: true,
            order: [[ 0, 'asc' ]],
            ajax:
            {
                url: '@Url.Page("/Users/Index", new { area = "Admin", handler = "ListAll" })',
                type: "POST",
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
            },
            columns: [
                { data: "name", name: "Name", title: '@Localizer["Name"]' },
                { data: "email", name: "Email", title: '@Localizer["Email"]' },
                {
                    data: "isActive",
                    name: "IsActive",
                    title: '@Localizer["Status"]',
                    render: function (data, type, row, meta) {
                        if (data) {
                            return '<span class="badge badge-success">@Localizer["Active"]</span>';
                        }
                        else {
                            return '<span class="badge badge-danger">@Localizer["Deactivated"]</span>';
                        }
                    }
                },
            ],
            buttons: [
        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.Create)).Succeeded)
        {
            <text>
                {
                    text: '@Localizer["Add"]',
                    action: function (e, dt, button, config) {
                        var url = '@Url.Page("/Users/Add", new { area = "Admin", handler = "Add" })';
                        window.location.href = url;
                    },
                },
            </text>
        }
		@if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.Edit)).Succeeded)
		{
			<text>
                {
                    extend: 'selectedSingle',
					text: '@Localizer["Edit"]',
                    action: function (e, dt, button, config) {
						var url = '/Admin/Users/' + dt.row({ selected: true }).data().id + '/Edit';
                        window.location.href = url;
                    },
				},
			</text>
		}
                {
                    extend: 'selectedSingle',
					text: '@Localizer["View"]',
                    action: function (e, dt, button, config) {
						var url = '/Admin/Users/' + dt.row({ selected: true }).data().id;
                        window.location.href = url;
                    },
				},
                'excel', 'pdf', 'pageLength',
            ],
        });
    });
</script>
}
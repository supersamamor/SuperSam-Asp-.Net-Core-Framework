@page
@model DetailsModel
@{
    ViewData["Title"] = Localizer["View Task / Company"];
    ViewData["ActiveMainPage"] = "TaskCompanyAssignment";
    ViewData["Level1"] = "DSF";
}
<div class="container-fluid" id="taskCompanyAssignment-container">
    <input type="hidden" asp-for="@Model.RemoveSubDetailId" />
    <input type="hidden" asp-for="@Model.AsyncAction" />
    <div id="PartialLoaderContainer">
        <partial name="_InputFieldsPartial" model="Model.TaskCompanyAssignment" />
    </div>
</div>
<div id="toolbar-container" class="btn-group" role="group">
	<a asp-page="Index" class="btn btn-secondary" title="@Localizer["Back"]"><i class="fas fa-arrow-left"></i></a>
    @if ((await AuthorizationService.AuthorizeAsync(User, Permission.TaskCompanyAssignment.Create)).Succeeded)
    {
        <a asp-page="Add"  id="btnAddRecord" class="btn btn-success" title="@Localizer["Add"]"><i class="fas fa-plus"></i></a>
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, Permission.TaskCompanyAssignment.Edit)).Succeeded)
    {
        <a asp-page="Edit" asp-route-id="@Model.TaskCompanyAssignment.Id" class="btn btn-primary" title="@Localizer["Edit"]"><i class="fas fa-pen"></i></a>
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, Permission.TaskCompanyAssignment.Delete)).Succeeded)
    {
        <a asp-page="Delete" asp-route-id="@Model.TaskCompanyAssignment.Id" class="btn btn-danger" title="@Localizer["Delete"]"><i class="fas fa-trash"></i></a>
    }
</div>
<a id="back-to-top" href="#" class="btn btn-primary back-to-top" role="button" aria-label="Scroll to top">
    <i class="fas fa-chevron-up"></i>
</a>
@section Scripts {
<partial name="_DisableFieldsPartial" model="@("taskCompanyAssignment-container")" />
}
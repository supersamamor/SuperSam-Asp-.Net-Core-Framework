@{
    var user = await UserManager.GetUserAsync(User);
    var appName = Configuration.GetValue<string>("Application");
}
<nav class="navbar navbar-dark align-items-start sidebar sidebar-dark accordion bg-gradient-primary p-0">
    <div class="container-fluid d-flex flex-column p-0">
        <a class="navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0" href="#">
            <div class="sidebar-brand-icon rotate-n-15"><i class="fas fa-th-large"></i></div>
            <div class="sidebar-brand-text mx-3" style="max-width:100px;"><span>ProjectNamePlaceHolder</span></div>
        </a>
        <hr class="sidebar-divider my-0">
        <ul class="navbar-nav text-light" id="accordionSidebar">
            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Admin.View)).Succeeded)
            {
                <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "Admin")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-cogs nav-icon"></i>
                        <span>
                            @Localizer["Admin"]
                            <i class="right fas level-one-nav-icon fa-angle-left"></i>
                        </span>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Entities.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Entities" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Entities")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Entities"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Roles.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Roles" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Roles")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Roles"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Users" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Users")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Users"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Apis.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Apis" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "APIs")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["APIs"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Applications.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Applications" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Applications")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Applications"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.AuditTrail.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/AuditTrail" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "AuditTrail")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Audit Trail"]</span>
                                </a>
                            </li>
                        }
                        Template:[ApprovalNavMenu]
                    </ul>
                </li>
            }
            <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "AreaPlaceHolder")">
                <a href="#" class="nav-link">
                    <i class="fas fa-list-alt nav-icon"></i>
                    <span>
                        @Localizer["AreaDescriptionPlaceHolder"]
                        <i class="right fas level-one-nav-icon fa-angle-left"></i>
                    </span>
                </a>
                <ul class="nav nav-treeview">
                    Template:[InsertNewNavigationMenuTextHere]
                </ul>
            </li>
        </ul>
        <div class="text-center d-none d-md-inline"><button class="btn rounded-circle border-0" id="sidebarToggle" type="button"></button></div>
    </div>
</nav>
@{
    var user = await UserManager.GetUserAsync(User);
    var appName = Configuration.GetValue<string>("Application");
	var backgroundClass = Configuration.GetValue<string>("BackgroundClass");
}
<nav class="navbar navbar-dark align-items-start sidebar sidebar-dark accordion @backgroundClass p-0">
    <div class="container-fluid d-flex flex-column p-0">
        <a class="navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0" href="#">
            <div class="sidebar-brand-icon rotate-n-15"><i class="fas fa-th-large"></i></div>
            <div class="sidebar-brand-text mx-3"><span>DSF</span></div>
        </a>
        <hr class="sidebar-divider my-0">
        <ul class="navbar-nav text-light" id="accordionSidebar">
			<li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "Dashboard")">
                <a href="/DSF/Dashboard" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Dashboard")">
                    <i class="fas fa-tachometer-alt nav-icon"></i>
                    <span>
                        @Localizer["Dashboard"]
                    </span>
                </a>
            </li>
            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Admin.View)).Succeeded)
            {
                <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "Admin")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-cogs nav-icon"></i>
                        <span>
                            @Localizer["Admin"]
                            <i class="right fas level-one-nav-icon fa-angle-left"></i>
                        </span>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Entities.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Entities" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Entities")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Entities"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Roles.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Roles" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Roles")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Roles"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Users" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Users")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Users"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Apis.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Apis" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "APIs")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["APIs"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Applications.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Applications" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Applications")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Applications"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.AuditTrail.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/AuditTrail" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "AuditTrail")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Audit Trail"]</span>
                                </a>
                            </li>
                        }
                        @if((await AuthorizationService.AuthorizeAsync(User, Permission.ApproverSetup.View)).Succeeded)
							{
								<li class="nav-item">
									<a href = "/DSF/ApproverSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Approval")">
										<i class="fas fa-circle nav-icon"></i>
										<span>
											@Localizer["Approval"]
										</span>
									</a>
								</li>
							}
						@if ((await AuthorizationService.AuthorizeAsync(User, Permission.ReportSetup.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/DSF/ReportSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "ReportSetup")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>
                                        @Localizer["Report Setup"]
                                    </span>
                                </a>
                            </li>
                        }
                    </ul>
                </li>
            }
            <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "DSF")">
                <a href="#" class="nav-link">
                    <i class="fas fa-list-alt nav-icon"></i>
                    <span>
                        @Localizer["Delivery Submission Facility"]
                        <i class="right fas level-one-nav-icon fa-angle-left"></i>
                    </span>
                </a>
                <ul class="nav nav-treeview">
                    @if((await AuthorizationService.AuthorizeAsync(User, Permission.Company.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Company" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Company")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Company"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Department.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Department" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Department")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Department"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Section.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Section" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Section")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Section"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Team.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Team" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Team")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Team"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Holiday.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Holiday" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Holiday")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Holiday"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Tags.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Tags" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Tags")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Tags"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.TaskList.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/TaskList" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "TaskList")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Task"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Assignment.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Assignment" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Assignment")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Assignment"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Delivery.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/DSF/Delivery" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Delivery")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Submission"]
									</span>
								</a>
							</li>
						}
						
                </ul>
            </li>
			@{
                var reportList = await dropdownService.GetReportList();
                if (reportList.Count > 0)
                {
                    if ((await AuthorizationService.AuthorizeAsync(User, Permission.Report.View)).Succeeded)
                    {
                        <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "Report")">
                            <a href="#" class="nav-link">
                                <i class="fas fa-chart-line nav-icon"></i>
                                <span>
                                    @Localizer["Report"]
                                    <i class="right fas level-one-nav-icon fa-angle-left"></i>
                                </span>
                            </a>
                            <ul class="nav nav-treeview">
                                @foreach (var item in reportList)
                                {
                                    <li class="nav-item">
                                        <a href="/DSF/Report?Id=@item["ReportId"]" class="nav-link @ManageNavPages.PageNavClass(ViewContext, item["ReportClass"])">
                                            <i class="fas fa-circle nav-icon"></i>
                                            <span>@item["ReportName"]</span>
                                        </a>
                                    </li>
                                }

                            </ul>
                        </li>
                    }
                }
            }
        </ul>
        <div class="text-center d-none d-md-inline"><button class="btn rounded-circle border-0" id="sidebarToggle" type="button"></button></div>
    </div>
</nav>
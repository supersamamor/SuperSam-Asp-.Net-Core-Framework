@using Models
@model TenantViewModel


<div class="container-fluid" style="margin-bottom:10px;margin-top:10px;">
    <div class="row">
        <div class="input-group form-group-padding">
            <div class="input-group-prepend">
                <label asp-for="@Model!.ITSupportContact" class="input-group-text"></label>
            </div>
            <input asp-for="@Model!.ITSupportContact" class="input-sm form-control" maxlength="255" />
            <button type="button" id="btnAddTenantITSupportContact" class="btn btn-primary cancel">
                <i class="fas fa-plus"></i>
                @Localizer["Add"]
            </button>
            <span asp-validation-for="@Model!.ITSupportContact" class="text-danger"></span>
        </div>
    </div>
</div>
<hr />
<table id="tenantContact" class="table table-hover table-bordered table-striped responsive nowrap" width="100%">
    <thead style="display:none;">
        <tr>
            <th style="display:none;"></th>
            <th>
                @Localizer["Contact Type"]
            </th>
            <th>
                @Localizer["Contact Detail"]
            </th>

            <th>
                @Localizer["Action"]
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model?.TenantITSupportContactList != null)
        {
            int counter = (Model!.TenantBranchContactList != null ? Model!.TenantBranchContactList!.Count : 0) +
            (Model!.TenantHeadOfficeContactList != null ? Model!.TenantHeadOfficeContactList!.Count : 0);
            foreach (var item in Model.TenantITSupportContactList)
            {
                <tr>
                    <td style="display:none;">
                        <input type="hidden" name="TenantContactList[@counter].Id" value="@item.Id" />
                        <input type="hidden" name="TenantContactList[@counter].TenantId" value="@item.TenantId" />
                        <input value="@Convert.ToInt32(CTI.TenantSales.Core.TenantSales.ContactGroup.ITSupport)" type="hidden" name="TenantContactList[@counter].Group" />
                    </td>
                    <td>
                        <select asp-for="@item.Type" name="TenantContactList[@counter].Type" asp-items="@Html.GetEnumSelectList<CTI.TenantSales.Core.TenantSales.ContactTypeEnum>()" class="form-control select-contacttype">
                            <option selected="selected" value="">- Select Contact Type -</option>
                        </select>
                        <span data-valmsg-for="TenantContactList[@counter].Type" asp-validation-for="@item.Type" class="text-danger"></span>
                    </td>
                    <td>
                        @if (item.Type == Convert.ToInt32(CTI.TenantSales.Core.TenantSales.ContactTypeEnum.Email))
                        {
                            <input type="email" asp-for="@item.Detail" name="TenantContactList[@counter].Detail" class="form-control" placeholder="@Localizer["Email Address"]" maxlength="50" />
                        }
                        else
                        {
                            <input type="number" asp-for="@item.Detail" name="TenantContactList[@counter].Detail" class="form-control" placeholder="@Localizer["Contact Number"]" maxlength="50" />
                        }
                        <span data-valmsg-for="TenantContactList[@counter].Detail" asp-validation-for="@item.Detail" class="text-danger"></span>
                    </td>
                    <td>
                        <button type="button" class="btn-field btn btn-danger RemoveTenantContactButton cancel" title="@Localizer["Remove TenantContact"]" removeId="@(item.Id)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                </tr>
                counter++;
            }
        }
    </tbody>
</table>
<div style="border-bottom:5px solid #ddd;margin-bottom:20px;width:100%;"></div>
@using Models
@model TenantViewModel
<script asp-add-nonce>
    $(document).ready(function () { 
		$.InitializeTenantContactFieldValidations = function(count)
        {
			let reqs = [];			
			for (let idx = 0; idx < count; idx++) {
				reqs.push({name: "TenantContactList[" + idx + "].Group", el: "Input", minlength:0, maxlength:0, isrequired: true, description: "Group"});
				reqs.push({name: "TenantContactList[" + idx + "].Type", el: "Input", minlength:0, maxlength:0, isrequired: true, description: "Type"});
				reqs.push({name: "TenantContactList[" + idx + "].Detail", el: "Input", minlength:0, maxlength:50, isrequired: false, description: "Detail"});
				reqs.push({name: "TenantContactList[" + idx + "].TenantId", el: "Input", minlength:0, maxlength:0, isrequired: true, description: "Tenant"});
				
			}
			let validator = $("#tenant-form").validate();
			for (let j in reqs)
			{
				let e = reqs[j];
				let el = $(`*[name="${e.name}"]`);
				el.rules("add", {
					required: {                
						depends: function(element) {
							return e.isrequired;
						}
					},
					messages: {
						required: (e.description === '') ? 'this field is required' : `'${e.description}' is required`,
					},
				});
				if(e.isrequired == true)
				{
					let labelElement = $(`label[name="Label.${e.name}"]`);
					$(labelElement).addClass("fieldrequired");
				}
				if(e.maxlength > 0) {el.attr('maxlength', e.maxlength);}
				if(e.minlength > 0) {el.attr('minlength', e.minlength);}   
			} 
		}       
    });
</script>
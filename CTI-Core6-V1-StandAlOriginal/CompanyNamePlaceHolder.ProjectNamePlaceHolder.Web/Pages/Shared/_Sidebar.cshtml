@{
    var user = await UserManager.GetUserAsync(User);
    var appName = Configuration.GetValue<string>("Application");
}
<!-- Main Sidebar Container -->
<aside class="main-sidebar sidebar-dark-primary elevation-4">
    <!-- Brand Logo -->
    <a href="/Index" class="brand-link">
        <img src="https://ui-avatars.com/api/?background=random&rounded=true&name=@appName" alt="Logo" class="brand-image img-circle elevation-3">
        <span class="brand-text font-weight-light">@appName</span>
    </a>

    <!-- Sidebar -->
    <div class="sidebar">
        <!-- Sidebar Menu -->
        <nav class="mt-2">
            <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="true">
                @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Admin.View)).Succeeded)
                {
                    <li class="nav-item @ManageNavPages.Level1Class(ViewContext, "Admin")">
                        <a href="#" class="nav-link">
                            <i class="fas fa-cogs nav-icon"></i>
                            <p>
                                @Localizer["Admin"]
                                <i class="right fas fa-angle-left"></i>
                            </p>
                        </a>
                        <ul class="nav nav-treeview">
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Entities.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/Admin/Entities" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Entities")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>@Localizer["Entities"]</p>
                                    </a>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Roles.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/Admin/Roles" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Roles")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>@Localizer["Roles"]</p>
                                    </a>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/Admin/Users" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Users")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>@Localizer["Users"]</p>
                                    </a>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Apis.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/Admin/Apis" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "APIs")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>@Localizer["APIs"]</p>
                                    </a>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Applications.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/Admin/Applications" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Applications")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>@Localizer["Applications"]</p>
                                    </a>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.AuditTrail.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/Admin/AuditTrail" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "AuditTrail")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>@Localizer["Audit Trail"]</p>
                                    </a>
                                </li>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.ApproverSetup.View)).Succeeded)
                            {
                                <li class="nav-item">
                                    <a href="/ProjectNamePlaceHolder/ApproverSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "ApproverSetup")">
                                        <i class="fas fa-circle nav-icon"></i>
                                        <p>
                                            @Localizer["Approver Setup"]
                                        </p>
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                <li class="nav-item @ManageNavPages.Level1Class(ViewContext, "ProjectNamePlaceHolder")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-list-alt nav-icon"></i>
                        <p>
                            @Localizer["ProjectNamePlaceHolder"]
                            <i class="right fas fa-angle-left"></i>
                        </p>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.MainModulePlaceHolder.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/ProjectNamePlaceHolder/MainModulePlaceHolder" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "MainModulePlaceHolder")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <p>
                                        @Localizer["MainModulePlaceHolder"]
                                    </p>
                                </a>
                            </li>
                        }

                    </ul>
                </li>
            </ul>
        </nav>
        <!-- /.sidebar-menu -->
    </div>
    <!-- /.sidebar -->
</aside>
@page
@model CTI.DPI.Web.Areas.DPI.Pages.Dashboard.IndexModel
@{
    ViewData["Title"] = @Model.Report.ReportName;
    ViewData["ActiveMainPage"] = "Dashboard";
    ViewData["Level1"] = "DPI";
}


<div class="row row-cols-1 row-cols-sm-1 row-cols-md-1 row-cols-lg-2 row-cols-xl-2 row-cols-xxl-2">
    <div class="col">
        <div class="card">
            <h5 class="card-header text-center"><span class="card-header-custom">@Model.Report.ReportName</span><br></h5>
            <div class="card-body">
                <canvas id="chart-container"></canvas>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <h5 class="card-header text-center"><span class="card-header-custom">Test</span><br></h5>
            <div class="card-body">
                <span>Test</span>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ChartJsScripts" />
    <script asp-add-nonce>
        $(document).ready(function () {
            function InitializeForm() {
        @if (Model.Report.ReportOrChartType == CTI.DPI.Core.Constants.ReportChartType.HorizontalBar)
        {
            <text>
                                            const data = {
                        labels: @Html.Raw(Model.Report.Labels),
                        datasets: [
                            {
                                data: @Html.Raw(Model.Report.Results),
                                backgroundColor: @Html.Raw(Model.Report.Colors),
                                borderWidth: 1,
                            }
                        ]
                    };
                    const ctx = document.getElementById('chart-container').getContext('2d');
                    const graph = new Chart(ctx, {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                x: {
                                    beginAtZero: true // To start the X-axis at zero
                                }
                            },
                            plugins: {
                                title: {
                                    display: false,
                                    text: '@Model.Report.ReportName'
                                },
                                legend: {
                                    display: false,
                                    position: 'bottom'
                                }
                            }
                        }
                    });
            </text>
        }
        else if (Model.Report.ReportOrChartType == CTI.DPI.Core.Constants.ReportChartType.Pie)
        {
            <text>
                                            const data = {
                        labels: @Html.Raw(Model.Report.Labels),
                        datasets: [
                            {
                                data: @Html.Raw(Model.Report.Results),
                                backgroundColor: @Html.Raw(Model.Report.Colors),
                                borderWidth: 1,
                            }
                        ]
                    };
                    const ctx = document.getElementById('chart-container').getContext('2d');
                    const graph = new Chart(ctx, {
                        type: 'pie',
                        data: data,
                        options: {
                            scales: {
                                x: {
                                    beginAtZero: true // To start the X-axis at zero
                                }
                            },
                            plugins: {
                                title: {
                                    display: false,
                                    text: '@Model.Report.ReportName'
                                },
                                legend: {
                                    display: false,
                                    position: 'bottom'
                                }
                            }
                        }
                    });
            </text>
        }
                                    }
            InitializeForm();
        });
    </script>
}

@{
    var user = await UserManager.GetUserAsync(User);
    var appName = Configuration.GetValue<string>("Application");
}
<nav class="navbar navbar-dark align-items-start sidebar sidebar-dark accordion bg-gradient-primary p-0">
    <div class="container-fluid d-flex flex-column p-0">
        <a class="navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0" href="#">
            <div class="sidebar-brand-icon rotate-n-15"><i class="fas fa-th-large"></i></div>
            <div class="sidebar-brand-text mx-3" style="max-width:100px;"><span>ELMS</span></div>
        </a>
        <hr class="sidebar-divider my-0">
        <ul class="navbar-nav text-light" id="accordionSidebar">
            @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Admin.View)).Succeeded)
            {
                <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "Admin")">
                    <a href="#" class="nav-link">
                        <i class="fas fa-cogs nav-icon"></i>
                        <span>
                            @Localizer["Admin"]
                            <i class="right fas level-one-nav-icon fa-angle-left"></i>
                        </span>
                    </a>
                    <ul class="nav nav-treeview">
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Entities.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Entities" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Entities")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Entities"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Roles.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Roles" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Roles")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Roles"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Users.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Users" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Users")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Users"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Apis.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Apis" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "APIs")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["APIs"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Applications.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/Applications" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Applications")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Applications"]</span>
                                </a>
                            </li>
                        }
                        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.AuditTrail.View)).Succeeded)
                        {
                            <li class="nav-item">
                                <a href="/Admin/AuditTrail" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "AuditTrail")">
                                    <i class="fas fa-circle nav-icon"></i>
                                    <span>@Localizer["Audit Trail"]</span>
                                </a>
                            </li>
                        }
                        @if((await AuthorizationService.AuthorizeAsync(User, Permission.ApproverSetup.View)).Succeeded)
							{
								<li class="nav-item">
									<a href = "/ELMS/ApproverSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Approval")">
										<i class="fas fa-circle nav-icon"></i>
										<span>
											@Localizer["Approval"]
										</span>
									</a>
								</li>
							}
                    </ul>
                </li>
            }
            <li class="nav-item level-one-nav @ManageNavPages.Level1Class(ViewContext, "ELMS")">
                <a href="#" class="nav-link">
                    <i class="fas fa-list-alt nav-icon"></i>
                    <span>
                        @Localizer["Lease Management System"]
                        <i class="right fas level-one-nav-icon fa-angle-left"></i>
                    </span>
                </a>
                <ul class="nav nav-treeview">
                    @if((await AuthorizationService.AuthorizeAsync(User, Permission.PPlusConnectionSetup.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/PPlusConnectionSetup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "PPlusConnectionSetup")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["FICO Connection Setup"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.EntityGroup.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/EntityGroup" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "EntityGroup")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Entity"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Project.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/Project" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Project")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Project"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Unit.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/Unit" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Unit")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Unit"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.UnitBudget.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/UnitBudget" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "UnitBudget")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Unit Budget"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.LeadSource.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/LeadSource" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "LeadSource")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Lead Source"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.LeadTouchPoint.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/LeadTouchPoint" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "LeadTouchPoint")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Lead Touch Point"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.LeadTask.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/LeadTask" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "LeadTask")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Lead Task"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.NextStep.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/NextStep" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "NextStep")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Next Step"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.ClientFeedback.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/ClientFeedback" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "ClientFeedback")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Client Feedback"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.BusinessNature.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/BusinessNature" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "BusinessNature")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Business Nature"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.BusinessNatureSubItem.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/BusinessNatureSubItem" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "BusinessNatureSubItem")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Business Nature / Sub Item Setup"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.BusinessNatureCategory.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/BusinessNatureCategory" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "BusinessNatureCategory")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Business Nature Category"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.OperationType.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/OperationType" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "OperationType")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Operation Type"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Salutation.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/Salutation" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Salutation")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Salutation"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Lead.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/Lead" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Lead")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Prospects"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Activity.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/Activity" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Activity")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Activity"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.Offering.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/Offering" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "Offering")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Offering"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.IFCATransactionType.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/IFCATransactionType" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "IFCATransactionType")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["IFCA Transaction Type"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.IFCATenantInformation.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/IFCATenantInformation" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "IFCATenantInformation")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["IFCA Tenant Information"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.IFCAUnitInformation.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/IFCAUnitInformation" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "IFCAUnitInformation")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["IFCA Unit Information"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.IFCAARLedger.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/IFCAARLedger" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "IFCAARLedger")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["IFCA AR Ledger"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.IFCAARAllocation.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/IFCAARAllocation" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "IFCAARAllocation")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["IFCA AR Allocation"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.ReportTableCollectionDetail.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/ReportTableCollectionDetail" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "ReportTableCollectionDetail")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Report Table / Collection Detail Setup"]
									</span>
								</a>
							</li>
						}
						@if((await AuthorizationService.AuthorizeAsync(User, Permission.ReportTableYTDExpirySummary.View)).Succeeded)
						{
							<li class="nav-item">
								<a href = "/ELMS/ReportTableYTDExpirySummary" class="nav-link @ManageNavPages.PageNavClass(ViewContext, "ReportTableYTDExpirySummary")">
									<i class="fas fa-circle nav-icon"></i>
									<span>
										@Localizer["Report Table / YTDExpiry Summary Setup"]
									</span>
								</a>
							</li>
						}
						
                </ul>
            </li>
        </ul>
        <div class="text-center d-none d-md-inline"><button class="btn rounded-circle border-0" id="sidebarToggle" type="button"></button></div>
    </div>
</nav>
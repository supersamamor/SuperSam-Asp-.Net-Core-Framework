@using Models
@model LeadViewModel
<input type="hidden" id="ContactCount" value="@Model?.ContactList?.Count" />
<div class="card">
    <h5 class="card-header">
        <span style="background-color: var(--bs-card-cap-bg);">@Localizer["Contact"]</span>
        <a id="btnAddContact" class="btn btnMaterial btn-flat primary semicircle cancel" title="@Localizer["Add"]"><i class="fas fa-plus" style="font-size:18px;"></i></a>
        <button class="cancel" type="button" id="btnRemoveContact" value="RemoveContact" style="display:none;"></button>
    </h5>
    <div class="card-body" style="overflow:auto;">
        <table id="subDetailList" class="table table-hover table-bordered table-striped responsive nowrap" width="100%">
            <thead>
                <tr>
                    <th style="display:none;"></th>
                    <th style="min-width:150px;">
                        @Localizer["Contact Type"]
                    </th>
                    <th style="min-width:150px;">
                        @Localizer["Contact Details"]
                    </th>
                    <th>
                        @Localizer["Action"]
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model?.ContactList != null)
                {
                    int counter = 0;
                    foreach (var item in Model.ContactList)
                    {
                        <tr>
                            <td style="display:none;">
                                <input type="hidden" name="ContactList[@counter].Id" value="@item.Id" />
                                <input type="hidden" name="ContactList[@counter].LeadID" value="@item.LeadID" />
                            </td>
                            <td>
                                <select asp-for="@item.ContactType" class="form-control select-contacttype select2" name="ContactList[@counter].ContactType" asp-items="@(dropdownService.ContactTypeList())"><option value="">- Select Contact Type -</option></select>
                                <span data-valmsg-for="ContactList[@counter].ContactType" asp-validation-for="@item.ContactType" class="text-danger"></span>
                            </td>
                            <td>
                                @if (@item.ContactType == CTI.ELMS.Core.Constants.ContactType.Email)
                                {
                                    <input type="email" asp-for="@item.ContactDetails" name="ContactList[@counter].ContactDetails" class="form-control" maxlength="255" />
                                }
                                else
                                {
                                    <input asp-for="@item.ContactDetails" name="ContactList[@counter].ContactDetails" class="form-control MobileNumber" maxlength="255" />
                                }
                                <span data-valmsg-for="ContactList[@counter].ContactDetails" asp-validation-for="@item.ContactDetails" class="text-danger"></span>
                            </td>
                            <td>
                                <a class="btn btnMaterial btn-flat accent semicircle cancel RemoveContactButton" title="@Localizer["Remove Contact"]" removeId="@(item.Id)"><i class="fas fa-trash" style="font-size:18px;"></i></a>
                            </td>
                        </tr>
                        counter++;
                    }
                }
            </tbody>
        </table>
    </div>
</div>

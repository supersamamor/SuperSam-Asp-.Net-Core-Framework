@page
@model OfferingListModel

@section Styles {
<partial name="_DataTableStyles" />
}
@{
    ViewData["Title"] = Localizer["Offering List"];
    ViewData["ActiveMainPage"] = "Lead";
    ViewData["Level1"] = "ELMS";
}
<input type="hidden" asp-for="@Model.LeadTabNavigation.LeadId" id="LeadId" />
<div class="card">
    <div class="card-header">
        <partial name="_TabNavigation" model="@Model.LeadTabNavigation" />
    </div>
    <div class="card-body">
        <table id="offering" class="table table-hover table-bordered table-striped responsive nowrap" width="100%">
            <thead>
                <tr>
                    <th>
                        @Localizer["Project"]
                    </th>
                    <th>
                        @Localizer["Offering History"]
                    </th>
                    <th>
                        @Localizer["Status"]
                    </th>
                    <th>
                        @Localizer["Status"]
                    </th>
                    <th>
                        @Localizer["Actions"]
                    </th>
                </tr>
            </thead>
        </table>
        <div id="toolbar-container" class="btn-group" role="group" style="float:right;margin-top:10px;">
            <a href="..\Index" class="btn btn-secondary" title="@Localizer["Cancel"]"><i class="fas fa-ban"></i></a>
        </div>
    </div>
</div>
<a id="back-to-top" href="#" class="btn btn-primary back-to-top" role="button" aria-label="Scroll to top">
    <i class="fas fa-chevron-up"></i>
</a>
@section Scripts {
<partial name="_DataTableScripts" />
<script asp-add-nonce>
    $(document).ready(function () {
        var table = $('#offering').DataTable({
            select: false,
            serverSide: true,
            order: [[ 2, 'desc' ]],
            ajax:
            {
                url: '@Url.Page("/Lead/Offering/OfferingList", new { area = "ELMS", handler = "ListAll" })',
                type: "POST",
                headers: {
                    RequestVerificationToken:
                        $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                data: function(d) {
                     d.leadId = $("#LeadId").val();
                },
            },
            initComplete: function( settings, json ) {
                BindTableRowCollapseEvent();
            },
            columns: [
                { data: "projectName", name: "Project.ProjectName", responsivePriority: 1, title: '@Localizer["Project"]', searchable: true, orderable: true },
                { data: "offerSheetNo", name: "Id", responsivePriority: 1, title: '@Localizer["Offer Sheet Ref #"]', searchable: false, orderable: true },
                { data: "createdDate", name: "CreatedDate", responsivePriority: 1, title: '@Localizer["Created Date / Created By"]', searchable: false },
                { data: "status", name: "Status", responsivePriority: 1, title: '@Localizer["Offer Sheet Status"]', searchable: false, orderable: true },
                {
                    data: null,
                    searchable: false,
                    orderable: false,
                    responsivePriority: 2,
                    width: "10%",
                    render: function (data, type, row, meta) {
                        var url = '@Url.Page("/Lead/Offering/OfferingDetails", new { area = "ELMS" })' + '?id=' + row.id;
                        var button = '<a href="' + url + '" class="btn btnMaterial btn-flat primary semicircle btnViewOffering" title="@Localizer["View"]"><i class="far fa-eye"></i></a>';
                @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Offering.Edit)).Succeeded)
                {
                    <text>
                        url = '@Url.Page("/Lead/Offering/EditOffering", new { area = "ELMS" })' + '?id=' + row.id;
                        button =  button + '&nbsp;<a href="' + url + '" class="btn btnMaterial btn-flat success semicircle btnEditOffering" title="@Localizer["Edit"]"><i class="fas fa-pen"></i></a>';
                    </text>
                }
                @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Offering.Print)).Succeeded)
                {
                    <text>
                        url = '@Url.Page("/Lead/Offering/PrintOffering", new { area = "ELMS" })' + '?id=' + row.id;
                        button =  button + '&nbsp;<a href="' + url + '" class="btn btnMaterial btn-flat primary semicircle" title="@Localizer["Print"]"><i class="fas fa-print"></i></a>';
                    </text>
                }           
                @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Offering.SignOffersheet)).Succeeded)
                {
                    <text>                      
                        if(row.isSigned==false)
                        {
                            url = '@Url.Page("/Lead/Offering/SignOffering", new { area = "ELMS" })' + '?id=' + row.id;
                            button =  button + '&nbsp;<a href="' + url + '" class="btn btnMaterial btn-flat primary semicircle" title="@Localizer["Sign Offer Sheet"]"><i class="fas fa-check"></i></a>';
                        }                 
                    </text>
                }
                @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Offering.CancelOffersheet)).Succeeded)
                {
                    <text>
                        if(row.isSigned==true)
                        {
                            button =  button + '&nbsp;<a href="#" class="btn btnMaterial btn-flat success semicircle" title="@Localizer["Signed Offer Sheet"]"><i class="fas fa-check"></i></a>';
                            url = '@Url.Page("/Lead/Offering/CancelOffering", new { area = "ELMS" })' + '?id=' + row.id;
                            button =  button + '&nbsp;<a href="' + url + '" class="btn btnMaterial btn-flat accent semicircle" title="@Localizer["Cancel Offer Sheet"]"><i class="fas fa-ban"></i></a>';
                        }
                    </text>
                }
                        return button;
                    },
                },
                { data: "lastModifiedDate", name: "LastModifiedDate", title: '@Localizer["Last Modified Date"]', visible: false, searchable: false },
                { data: "id", name: "Id", visible: false },
                { data: "isSigned", name: "IsSigned", visible: false },
            ],
            buttons: [
        @if ((await AuthorizationService.AuthorizeAsync(User, Permission.Offering.Create)).Succeeded)
        {
            <text>
                {
                    text: '@Localizer["Add"]',
                    action: function (e, dt, button, config) {
                        var url = '@Url.Page("/Lead/Offering/AddOffering", new { area = "ELMS" })'+ '?leadId=' + '@Model.LeadTabNavigation.LeadId';
                        window.location.href = url;
                    },
                    className: 'btn btn-success text-light',
                },
            </text>
        }
                'excel', 'pdf', 'pageLength',
            ],
        });
        var debounce = new $.fn.dataTable.Debounce(table); // Add delay to search

        $('.btn-table_filter').on('click', function(e) {
            table.ajax.reload(null, false);
        });
        function BindTableRowCollapseEvent()
        {
            $('#offering tbody').on('click', 'td.dtr-control', function () {
                $.showAjaxLoaderOnClick([".btnAddOffering",".btnEditOffering",".btnViewOffering",".btnDeleteOffering"]);
            });
        }
        $.showAjaxLoaderOnClick([".btnAddOffering",".btnEditOffering",".btnViewOffering",".btnDeleteOffering"]);

        $('#navbar_search').keyup(function(){
              table.search($(this).val()).draw();
        })
        $(".dataTables_filter").hide();
        $("#navbar_search_container").show();
    });
</script>
}
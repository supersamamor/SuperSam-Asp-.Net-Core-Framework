@using Models
@model ActivityViewModel

@{
    var activityStatusHelper = new CTI.ELMS.Web.Helper.ActivityStatusHelper(Mediatr);
    var userHelper = new CTI.ELMS.Web.Helper.UserHelper(Mediatr);
}
@if (Model?.ActivityHistoryList != null)
{
    int counter = 0;
    foreach (var item in Model.ActivityHistoryList.OrderByDescending(l => l.ActivityDate))
    {
        <input type="hidden" name="ActivityHistoryList[@counter].Id" value="@item.Id" />
        <input type="hidden" name="ActivityHistoryList[@counter].LastModifiedBy" value="@item.LastModifiedBy" />
        <input type="hidden" name="ActivityHistoryList[@counter].ForeignKeyLeadTask" value="@item.ForeignKeyLeadTask" />
        <input type="hidden" name="ActivityHistoryList[@counter].ActivityDate" value="@item.ActivityDate" />
        <input type="hidden" name="ActivityHistoryList[@counter].UnitsInformation" value="@item.UnitsInformation" />
        <input type="hidden" name="ActivityHistoryList[@counter].LeadTaskId" value="@item.LeadTaskId" />
        <input type="hidden" name="ActivityHistoryList[@counter].ClientFeedbackId" value="@item.ClientFeedbackId" />
        <input type="hidden" name="ActivityHistoryList[@counter].ForeignKeyClientFeedback" value="@item.ForeignKeyClientFeedback" />
        <input type="hidden" name="ActivityHistoryList[@counter].ForeignKeyNextStep" value="@item.ForeignKeyNextStep" />
        <input type="hidden" name="ActivityHistoryList[@counter].TargetDate" value="@item.TargetDate" />
        <input type="hidden" name="ActivityHistoryList[@counter].ActivityRemarks" value="@item.ActivityRemarks" />
        <input type="hidden" name="ActivityHistoryList[@counter].LastModifiedDate" value="@item.LastModifiedDate" />
        <div class='col-xs-12'>@userHelper.GetUserName(item!.LastModifiedBy!) / @item!.ForeignKeyLeadTask / @(((System.DateTime)item.ActivityDate!).ToString("MMM dd, yyyy"))</div>
        <div class='col-xs-12'>
            <div class='col-xs-12'><small><i>Space: @item.UnitsInformation / Status: @Html.Raw(activityStatusHelper.GetActivityStatus(item.LeadTaskId!, item.ClientFeedbackId!))</i></small></div>
            <div class='col-xs-12'><small><i>Client FeedBack: @item!.ForeignKeyClientFeedback</i></small></div>
            <div class='col-xs-12'><small><i>Next Step: @item.ForeignKeyNextStep / @(item.TargetDate != null ? ((System.DateTime)item.TargetDate!).ToString("MMM dd, yyyy") : "")</i></small></div>
            <div class='col-xs-12'><small><i>Remarks : @item.ActivityRemarks</i></small></div>
            <div class='col-xs-12'><small><i>Created Date/Time :  @(((System.DateTime)item.LastModifiedDate!).AddHours(Configuration.GetValue<int>("TimeOffset")).ToString("MMM dd, yyyy hh:mm:ss tt"))</i></small></div>
        </div>
        <div class='clearfix'></div>
        <hr />
        counter++;
    }
}
